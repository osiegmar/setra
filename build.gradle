buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

group = 'de.siegmar'
archivesBaseName = 'securetransfer'
version = '1.0.0'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

ext['thymeleaf.version'] = '3.0.5.RELEASE'
ext['thymeleaf-layout-dialect.version'] = '2.2.1'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.apache.commons:commons-crypto:1.0.0')
    compile('commons-fileupload:commons-fileupload:1.3.2')
    compile('com.google.guava:guava:21.0')
    compile('com.fasterxml.jackson.core:jackson-core:2.8.8')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8')
    compile('org.webjars:bootstrap:3.3.7-1')
    compile('org.webjars:jquery:3.2.0')
    compile('org.webjars:clipboard.js:1.6.1')
    compile('org.webjars.bower:pwstrength-bootstrap:2.0.3')
    compile('org.webjars.bower:bootstrap-maxlength:1.7.0')
    testCompile('junit:junit:4.12')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.jsoup:jsoup:1.10.2')
    testCompile('org.apache.httpcomponents:httpclient:4.5.3')
    testCompile('org.apache.httpcomponents:httpmime:4.5.3')
}

processResources {
    filesMatching('**/application.properties') {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            "version" : project.version
        ]
    }
}

checkstyle {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    configProperties = [samedir: "${rootDir}/config/checkstyle", project_loc: "${rootDir}"]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task extractFatJar() {
    doLast {
        copy {
            from(zipTree(configurations.archives.allArtifacts.files.singleFile))
            into("build/unzipped/")
        }
    }
}

build.finalizedBy extractFatJar
